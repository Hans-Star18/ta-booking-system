name: Build and deploy Laravel to Production VPS - link2pay

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Install Composer Dependencies if exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Frontend Assets
        run: npm run build

      - name: Zip artifact for deployment
        run: zip -r release.zip . -x ".env" ".git/*" "node_modules/*" "tests/*" "storage/logs/*" ".github/*"

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: laravel-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: laravel-app

      - name: Unzip artifact
        run: unzip -o release.zip

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH connection successful'"

      - name: Deploy files to VPS
        run: |
          # Create backup of current deployment
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            if [ -d '/var/www/html/link2pay' ]; then
              sudo rm -rf /var/www/html/link2pay_backup
              sudo cp -r /var/www/html/link2pay /var/www/html/link2pay_backup
            fi
            sudo mkdir -p /var/www/html/link2pay
          "
          
          # Deploy using rsync
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='storage/logs' \
            --exclude='.env' \
            ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/html/link2pay/

      - name: Run Laravel setup commands on VPS
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd /var/www/html/link2pay
            
            # Set proper ownership and permissions
            sudo chown -R www-data:www-data /var/www/html/link2pay
            sudo chmod -R 755 /var/www/html/link2pay
            sudo chmod -R 775 /var/www/html/link2pay/storage
            sudo chmod -R 775 /var/www/html/link2pay/bootstrap/cache
            
            # Create .env from .env.example if not exists
            if [ ! -f '.env' ]; then
              sudo cp .env.example .env
              sudo chown www-data:www-data .env
            fi
            
            # Run Laravel commands
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            
            # Restart services if needed
            sudo systemctl reload nginx
            sudo systemctl reload php8.2-fpm
          "

      - name: Cleanup SSH key
        if: always()
        run: |
          rm -f ~/.ssh/deploy_key